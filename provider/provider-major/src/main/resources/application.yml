spring:
  data:
    mongodb:
      uri: mongodb://localhost:27017/test
  datasource:
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/db_seata?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 5
      max-active: 20
      min-idle: 5
      max-wait: 500
      phy-timeout-millis: 7200000
      remove-abandoned: true
      remove-abandoned-timeout: 180
      test-while-idle: true
      test-on-return: false
      test-on-borrow: false
      validation-query: SELECT 1
      validation-query-timeout: 1
      time-between-eviction-runs-millis: 15000
      default-auto-commit: true
      log-abandoned: false
      connection-properties: socketTimeout=300000;connectTimeout=100000
redisson:
  address: redis://127.0.0.1:6379
#seata:
#  tx-service-group: deagle_at
#  service:
#    grouplist: 127.0.0.1:8091
logging:
  level:
    io:
      seata: info
      samples:
        account:
          persistence:
            AccountMapper: debug
      #  redis:
      #    database:
      #    host: 127.0.0.1
      #    port: 6637

      #management:
      #  endpoints:
      #    web:
      #      exposure:
      #        include: refresh
      #rocketmq:
      #  name-server: 192.168.80.128:9876
      #  producer:
      #    group: ${spring.application.name}
      #    url: jdbc:mysql://localhost:3306/local?characterEncoding=utf-8&useSSL=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai
      #    # 链接数据库的用户名
      #    username: root
      #    # 链接数据库的用户密码，如果你不希望密码直接写在配置文件中，可以使用ConfigFilter。
      #    password: 123456
      #    # 驱动（根据url自动识别）这一项可配可不配，如果不配置druid会根据url自动识别dbType，然后选择相应的driverClassName(建议配置下)
      #    driver-class-name: com.mysql.cj.jdbc.Driver
      #    # 数据库类型
      #    type: com.alibaba.druid.pool.DruidDataSource
      #    druid:
      #      initialSize: 1
      #      maxActive: 20
      #      minIdle: 1
      #      maxWait: 60000
      #      pool-prepared-statements: false
      #      max-open-prepared-statements: -1
      #      validationQuery: select 'x'
      #      testOnBorrow: false
      #      testOnReturn: false
      #      testWhileIdle: true
      #      timeBetweenEvictionRunsMillis: 60000
      #      minEvictableIdleTimeMillis: 300000
      #      connectionInitSqls: select 1 from dual
      #      filters: stat, wall
      #      filter:
      #        # 监控统计
      #        stat:
      #          # 数据库类型
      #          db-type: mysql
      #          # 慢SQL
      #          log-slow-sql: true
      #          # 慢SQL执行时间
      #          slow-sql-millis: 2000
      #        wall:
      #          enabled: true
      #          db-type: mysql
      #          config:
      #            delete-allow: false
      #            drop-table-allow: false

      # statViewServlet配置，说明配置参考druid wiki
      #      stat-view-servlet:
      #        # 是否启用statViewServlet配置
      #        enabled: true
      #        # 访问监控页面
      #        url-pattern: "/druid/*"
      #        # 禁止手动重置监控数据
      #        reset-enable: false
      #        # 设置监控页面的登陆名
      #        login-username: admin
      #        # 设置监控页面的登陆密码
      #        login-password: admin

      #WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
#      web-stat-filter:
#        # 是否启用WebStatFilter
#        enabled: true
#        # 访问路径
#        url-pattern: "/*"
#        # 排除不必要的url
#        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
#        # 监控最大session数，默认是1000
#        session-stat-max-count: 1000
#        # 是否启用session的统计功能
#        session-stat-enable: true
#        # 是否启用监控单个Url调用的sql列表
#        profile-enable: true
#        # 使druid当前session的用户是谁，session_user_key是你保存到session中的sessionName
#        principalSessionName: session_user_key
#        # 使druid只当当前的user是谁,cookie_user_key是你保存在cookie中的cookieName
#        principalCookieName: cookie_user_key
mybatis-plus:
  mapper-locations: classpath*:/mapper/**/*Mapper.xml
  type-aliases-package: com.zw.**
  type-aliases-super-type: java.lang.Object
  type-enums-package: com.baomidou.mybatisplus.samples.quickstart.enums
  check-config-location: true
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    aggressive-lazy-loading: true
    auto-mapping-behavior: partial
    auto-mapping-unknown-column-behavior: FAILING
    call-setters-on-nulls: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    banner: false
    db-config:
      id-type: auto

    # MyBatis Mapper 所对应的 XML 文件位置，如果您在 Mapper 中有自定义方法(XML 中有自定义实现)，需要进行该配置，告诉 Mapper 所对应的 XML 文件位置
  #  config-location: classpath:mybatis-config.xml
  # 指定外部化 MyBatis Properties 配置，通过该配置可以抽离配置，实现不同环境的配置部署
  #  configuration-properties: classpath:mybatis-config.properties
  # Mapper对应的xml文件扫描，多个目录用逗号或者分号分隔
  # MyBaits 别名包扫描路径，通过该属性可以给包中的类注册别名，注册后在 Mapper 对应的 XML 文件中可以直接使用类名，而不用使用全限定的类名(即 XML 中调用的时候不用包含包名)
  # 该配置请和 typeAliasesPackage 一起使用，如果配置了该属性，则仅仅会扫描路径下以该类作为父类的域对象
  # 枚举类 扫描路径，如果配置了该属性，会将路径下的枚举类进行注入，让实体类字段能够简单快捷的使用枚举属性
  # 启动时是否检查 MyBatis XML 文件的存在，默认不检查
  # SIMPLE：该执行器类型不做特殊的事情，为每个语句的执行创建一个新的预处理语句,REUSE：该执行器类型会复用预处理语句,BATCH：该执行器类型会批量执行所有的更新语句
  #  default-executor-type: REUSE
    # 配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）
    # 全局地开启或关闭配置文件中的所有映射器已经配置的任何缓存，默认为 true
    # 懒加载
    # NONE：不启用自动映射 PARTIAL：只对非嵌套的 resultMap 进行自动映射 FULL：对所有的 resultMap 都进行自动映射
    # NONE：不做任何处理 (默认值)WARNING：以日志的形式打印相关警告信息 FAILING：当作映射失败处理，并抛出异常和详细信息
    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段
    # 配置JdbcTypeForNull, oracle数据库必须配置
    #    jdbc-type-for-null: "null"
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
  # 是否控制台 print mybatis-plus 的 LOGO

    # 机器 ID 部分(影响雪花ID)
  #    worker-id:
  # 数据标识 ID 部分(影响雪花ID)(workerId 和 datacenterId 一起配置才能重新初始化 Sequence)
  #    datacenter-id:
    #表名下划线命名默认true
    #    table-underline: true
    #id类型
    #是否开启大写命名，默认不开启
    #capital-mode: false
    #逻辑已删除值,(逻辑删除下有效) 需要注入逻辑策略LogicSqlInjector 以@Bean方式注入
    #    logic-not-delete-value: 0
    #逻辑未删除值,(逻辑删除下有效)
    #    logic-delete-value: 1
    #数据库类型 这个属性没什么用 数据库类型,默认值为未知的数据库类型 如果值为OTHER,启动时会根据数据库连接 url 获取数据库类型;如果不是OTHER则不会自动获取数据库类型
#      db-type: mysql
    # IGNORED	忽略判断 NOT_NULL 非NULL判断  NOT_EMPTY 非空判断(只对字符串类型字段,其他类型字段依然为非NULL判断)  DEFAULT	追随全局配置 类似的还有update-strategy、select-strategy等
#      insert-strategy: not_null
refresh: 123
customer: 456
#    elasticsearch:
#      client:
#        reactive:
#          endpoints: localhost:9300
# seata

